*** Testing single-threading for contiguous-internally allocated memory: Arithmetic Functions

Function 'MakeRamped' (start at the additive identity element and increment by the multiplicative identity element) took 0.029436
Function 'MakeRamped' (start at the specified start_val and increment by the specified step_val) took 0.0300893
Function 'CalculatePi' took 0.0282362
Result: inf
Function 'CalculateSigma' took 0.0277193
Result: 1.6e+13
Function 'OffsetValues' (offset by the multiplicative identity element) took 0.028259
Function 'OffsetValues' (offset by the specified offst) took 0.0292514
Function 'ScaleValues' (scale by the specified scl) took 0.0297567
Function 'MakeRamped' (start at the additive identity element and increment by the multiplicative identity element) took 0.0359858
Function 'MakeRamped' (start at the specified start_val and increment by the specified step_val) took 0.0360877
Function 'CalculateArguments' took 0.148211
Function 'CalculateModuli' took 0.384445

*** Testing multi-threading for contiguous-internally allocated memory: Arithmetic Functions

Function 'MakeRamped' (start at the additive identity element and increment by the multiplicative identity element) took 0.0301593
Function 'MakeRamped' (start at the specified start_val and increment by the specified step_val) took 0.0297896
Function 'CalculatePi' took 0.0277101
Result: inf
Function 'CalculateSigma' took 0.0278081
Result: 1.6e+13
Function 'OffsetValues' (offset by the multiplicative identity element) took 0.0299998
Function 'OffsetValues' (offset by the specified offst) took 0.0318973
Function 'ScaleValues' (scale by the specified scl) took 0.0318821
Function 'MakeRamped' (start at the additive identity element and increment by the multiplicative identity element) took 0.0362477
Function 'MakeRamped' (start at the specified start_val and increment by the specified step_val) took 0.0365271
Function 'CalculateArguments' took 0.0545802
Function 'CalculateModuli' took 0.111938

For contiguous-internally allocated memory: multi-threading was 1.80024 times faster than single-threading

*** Testing single-threading for distributed-internally allocated memory: Arithmetic Functions

Function 'MakeRamped' (start at the additive identity element and increment by the multiplicative identity element) took 0.0327768
Function 'MakeRamped' (start at the specified start_val and increment by the specified step_val) took 0.0330855
Function 'CalculatePi' took 0.0300955
Result: inf
Function 'CalculateSigma' took 0.0292259
Result: 1.6e+13
Function 'OffsetValues' (offset by the multiplicative identity element) took 0.0308636
Function 'OffsetValues' (offset by the specified offst) took 0.0362686
Function 'ScaleValues' (scale by the specified scl) took 0.0344695
Function 'MakeRamped' (start at the additive identity element and increment by the multiplicative identity element) took 0.0401156
Function 'MakeRamped' (start at the specified start_val and increment by the specified step_val) took 0.0401414
Function 'CalculateArguments' took 0.155975
Function 'CalculateModuli' took 0.384773

*** Testing multi-threading for distributed-internally allocated memory: Arithmetic Functions

Function 'MakeRamped' (start at the additive identity element and increment by the multiplicative identity element) took 0.0324387
Function 'MakeRamped' (start at the specified start_val and increment by the specified step_val) took 0.0324304
Function 'CalculatePi' took 0.0290672
Result: inf
Function 'CalculateSigma' took 0.0291326
Result: 1.6e+13
Function 'OffsetValues' (offset by the multiplicative identity element) took 0.0293994
Function 'OffsetValues' (offset by the specified offst) took 0.0318883
Function 'ScaleValues' (scale by the specified scl) took 0.0319504
Function 'MakeRamped' (start at the additive identity element and increment by the multiplicative identity element) took 0.0401371
Function 'MakeRamped' (start at the specified start_val and increment by the specified step_val) took 0.0407623
Function 'CalculateArguments' took 0.0627572
Function 'CalculateModuli' took 0.111856

For distributed-internally allocated memory: multi-threading was 1.79685 times faster than single-threading

